---
layout: post
title: "[리눅스마스터] Ch.1 리눅스의 개요"
subtitle: "Section 1. 운영체제의 개요"
categories: [Study/LinuxMaster] 
tags:
comments: true
---
## 1. 운영체제의 정의 및 목적, 역할
---

**1) 운영체제의 정의**
: 사용자와 하드웨어 간의 상호작용을 위해 사용자 인터페이스를 제공하는 시스템 소프트웨어  


**2) 운영체제의 목적**
: 일정 시간 동안 처리하는 일의 양을 의미하는 **처리능력(Throughput)**의 향상  
: 시스템에서 결과가 얻어질 때까지의 **응답시간(Turnaround Time)**의 최소화
: 주어진 문제를 정확하게 처리하는 정도를 뜻하는 **신뢰도(Reliability)**의 향상
: 자원의 **사용 가능도(Availability)**의 향상

**3) 운영체제의 역할**
: 하드웨어의 제어, 입력, 출력 관리
: 한정된 하드웨어 자원을 다수의 이용자가 공유할 수 있는 기능 수행
: 자원 스케쥴링
: 시스템 호출 기능 제공
: 오류 복구 기능
: 파일 관리 및 네트워크 기능

## 2. 운영체제의 구조와 기능
---
**1) 운영체제의 구조**
: 운영체제는 다양한 하드웨어에 대한 이식성을 향상하기 위해 **하드웨어 추상 계층(HAL : Hardware Abstraction Layer)** 제공  
![](/assets/img/os_struct.png)

## 3. 운영체제의 운용 기법
---
1) 일괄 처리 시스템(Batch Processing System)
: 초기 운영체제의 형태로 여러 작업을 한 번에 묶어서 진행
: 운영체제가 작업들을 처리하기 시작하면 결과가 나올 때까지 기다려야 한다.
: 작업들이 처리 중일 때 시스템을 이용하지 못하므로 자원 사용의 효율성이 떨어진다.  

2) 다중 프로그래밍 시스템(Multi Programming System)
: 하나의 작업이 입출력 중일 때 다른 작업을 할당하여 CPU 사용률과 처리량을 향상 시키는 기법  

3) 시분할 시스템(Time Sharing System)
: 다중 프로그래밍 시스템은 작업 단위로 CPU 스케쥴링을 수행했다면,
: 시분할은 '타임 슬라이스', 또는 '타임 퀀텀'이라 불리 일정 작업 시간 동안 작업을 실행하고, 
: 이 시간이 만료되면 대기 큐에서 다음 작업 실행  

4) 다중 처리 시스템(Multi-Processing System)
: 여러 개의 CPU를 통하여 작업 처리 (=병렬 처리 시스템)
: 비대칭적 다중 처리(주종 관계)와 대칭적 다중 처리 유형으로 나눌 수 있다.
: 대칭적 다중 처리는 다시 SMP(Symmetric Multi-Processing)와 MPP(Massively Parallel Processing)으로 나눠진다.  

5) 실시간 처리 시스템(Real Time Processing System)
: 요구한 시간 안에 작업 처리 결과가 나와야 하는 시스템
: 경성 실시간 처리 시스템 : 시간 안에 반드시 처리
: 연성 실시간 처리 시스템 : 시간 안에 작업 완료를 못하더라도 시스템에 큰 영향 X

6) 다중 모드 시스템(Multi-Mode System)
: 1,2,3,4,5 시스템 모두 혼용 사용

7) 분산 처리 시스템(Distribute Processing System)
: 운영체제를 갖는 시스템들 간의 연결 및 자원 공유

## 4. 운영체제의 사례
---
1) 데스크톱 및 서버 운영체제  
   a) 윈도우
: 1975년 빌 게이츠 & 폴 앨런이 설립한 마이크로소프트에서 제작한 PC 운영체제
: Win10의 모체는 NT 커털 탑재한 기업용 OS인 Win NT

   b) Mac OS
: 스티브 잡스 & 스티브 워즈니악이 설립한 애플에서 개발한 유닉스/다윈 기반 Mac 전용 OS
: 2016년 OS X -> macOS로 변경

   c) 리눅스
: 1991년 리누스 토발즈가 개발
: 리차드 스톨만이 진행하던 GNU 프로젝트에서 리눅스 커널 기발 어플 개발

   d) 유닉스
: 1969년 AT&T사 벨 연구소의 켄 톰슨 & 데니스 리치가 개발
: C언어로 개발되어 새로운 플랫폼에 이식이 용이

2) 모바일 및 임베디드 운영체제  
   a) 안드로이드
: 2005년에 구글이 안드로이드 회사 인수.
: 가상 머신 변경 : 달빅 -> 안드로이드 런타임

   b) iOS
: macOS는 mac 겨냥이라면 iOS는 모바일 전용 운용체제

   c) 타이젠
: 인텔과 삼성의 주도로 리눅스+MeeGo 개발자가 합류하여 개발한 모바일/웨어러블/IVI 기기 운영체제
: 모바일 -> 스마트 TV / 스마트 워치용으로 변경

   d) 임베디드 리눅스
: 라즈비안 : 영국의 라즈베리파이 재단에서 만든 초소형/초저가 오픈소스 하드웨어, 데비안 리눅스 기반 운영체제
: webOS : LG에서 개발한 스마트 TV, IoT용 운영체제

3) IoT 운영체제  
   a) Linux
: Android Things : 2016년 개발된 안드로이드 기반 IoT 플랫폼
: Ubuntu Core : IoT용 우분투
   b) Windows IoT : IoT용 윈도우
   c) RTOS (실시간 운영체제)
 : FreeRTOS : 소형 저출력 엣지 디바이스용 오픈소스 운영체제 
 : VxWorks : 미국 윈드리버에서 개발한 RTOS
 : QNX : 임베디드 시장에서 주로 사용하는 유닉스 기반 RTOS

   d) 경량 OS
 : Contiki : 조명제어, 사운드 모니터링 등에 사용되는 BSD 라이선스 운영체제
 : TinyOS : 센서 네트워크용 운영체제
 : RIOT : IoT용 실시간 운영체제
